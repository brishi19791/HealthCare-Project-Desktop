/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.hospitaladminrole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Person.Doctor;
import Business.Person.Doctor.SpecializationType;
import Business.Organization.OrganizationDirectory;
import Business.Person.Person;
import Business.Roles.DoctorRole;
import Business.UserAccount.UserAccount;
import Business.Validation.EmailValidation;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author user
 */
public class AddDoctorsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddDoctorsJPanel
     */
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    EcoSystem system;

    public AddDoctorsJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory = organizationDirectory;
        this.system = system;
        populate();

    }

    public void populate() {
        specialjComboBox.removeAllItems();
        for (SpecializationType type : Doctor.SpecializationType.values()) {
            specialjComboBox.addItem(type);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        docnamejTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        docidjTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        specialjComboBox = new javax.swing.JComboBox();
        createjButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        phonenumberjTextField = new javax.swing.JTextField();
        createpatientjLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        usernamejTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        passwordjTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();

        jLabel1.setText("Name");

        docnamejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docnamejTextFieldActionPerformed(evt);
            }
        });
        docnamejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                docnamejTextFieldKeyTyped(evt);
            }
        });

        jLabel2.setText("Email ID");

        jLabel3.setText("Specialization");

        specialjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        specialjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialjComboBoxActionPerformed(evt);
            }
        });

        createjButton.setText("Create");
        createjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createjButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Phone Number");

        phonenumberjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phonenumberjTextFieldKeyTyped(evt);
            }
        });

        createpatientjLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createpatientjLabel.setText("Create Doctor");

        jLabel5.setText("UserName");

        usernamejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernamejTextFieldKeyTyped(evt);
            }
        });

        jLabel6.setText("Password");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(docidjTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(docnamejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(specialjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phonenumberjTextField)
                            .addComponent(usernamejTextField)
                            .addComponent(passwordjTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(createpatientjLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton)
                        .addGap(68, 68, 68)
                        .addComponent(createjButton)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(createpatientjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(docnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(docidjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(phonenumberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(specialjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(usernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(passwordjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(createjButton))
                    .addComponent(backJButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createjButtonActionPerformed
        // TODO add your handling code here:
        if (docnamejTextField.getText().isEmpty() || docidjTextField.getText().isEmpty() || phonenumberjTextField.getText().isEmpty() || usernamejTextField.getText().isEmpty() || passwordjTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter all details");
        } else {
            String name = docnamejTextField.getText();
            String email = docidjTextField.getText();
            int num = (Integer.parseInt(phonenumberjTextField.getText()));
//            if (String.valueOf(num).length() != 10) {
//                JOptionPane.showMessageDialog(null, "Please enter valid ph num");
//                return;
//            }
            String username = usernamejTextField.getText();
            String password = passwordjTextField.getText();
            SpecializationType type = (SpecializationType) specialjComboBox.getSelectedItem();
            boolean status = EmailValidation.validateEmail(email);
            if (status == false || String.valueOf(num).length() != 10) {
                JOptionPane.showMessageDialog(null, "Please enter valid details");
                return;
            }
            for (Network network : system.getNetworkList()) {
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
                            if (ua.getUsername().equals(username)) {
                                JOptionPane.showMessageDialog(null, "A user with same username already exists");
                                return;
                            }
                        }
                    }
                }
            }

            for (Organization organization : organizationDirectory.getOrganizationList()) {
                if (organization instanceof DoctorOrganization) {

                    Person person = organization.getEmployeeDirectory().createDoctor(name, email, num, type);
                    organization.getUserAccountDirectory().createUserAccount(username, password, person, new DoctorRole());

                }
            }

        }

    }//GEN-LAST:event_createjButtonActionPerformed

    private void specialjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialjComboBoxActionPerformed
        // TODO add your handling code here:
        specialjComboBox.removeAllItems();
        for (SpecializationType type : Doctor.SpecializationType.values()) {
            specialjComboBox.addItem(type);
        }
    }//GEN-LAST:event_specialjComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void docnamejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docnamejTextFieldKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!(Character.isLetter(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_docnamejTextFieldKeyTyped

    private void phonenumberjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phonenumberjTextFieldKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!(Character.isDigit(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_phonenumberjTextFieldKeyTyped

    private void usernamejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernamejTextFieldKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!(Character.isDigit(ch) || Character.isLetter(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_usernamejTextFieldKeyTyped

    private void docnamejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docnamejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docnamejTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton createjButton;
    private javax.swing.JLabel createpatientjLabel;
    private javax.swing.JTextField docidjTextField;
    private javax.swing.JTextField docnamejTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField passwordjTextField;
    private javax.swing.JTextField phonenumberjTextField;
    private javax.swing.JComboBox specialjComboBox;
    private javax.swing.JTextField usernamejTextField;
    // End of variables declaration//GEN-END:variables
}
