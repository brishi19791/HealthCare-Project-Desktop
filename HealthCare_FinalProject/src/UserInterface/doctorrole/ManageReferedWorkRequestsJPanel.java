/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.doctorrole;

import Business.EcoSystem;
import Business.Encounter.Encounter;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Person.Doctor;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorReferenceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class ManageReferedWorkRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageReferedWorkRequestsJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private DoctorOrganization doctorOrganization;
    private Enterprise enterprise;
    private EcoSystem system;
    private Encounter encounter;

    public ManageReferedWorkRequestsJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization doctorOrganization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.doctorOrganization = doctorOrganization;
        this.enterprise = enterprise;
        this.system = system;
        populateTable();
    }
    
    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel)refereddetailsjTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            if(request instanceof DoctorReferenceWorkRequest){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender();
            row[2] = request.getReceiver() == null ? null : request.getReceiver();
            row[3] = request.getStatus();
            DoctorReferenceWorkRequest req=(DoctorReferenceWorkRequest)request;
            row[4]=req.getPatient().getFname();
            dtm.addRow(row);
            }
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        refereddetailsjTable = new javax.swing.JTable();
        assignjButton = new javax.swing.JButton();
        viewjButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        phnumjTextField = new javax.swing.JTextField();
        agejTextField = new javax.swing.JTextField();
        fnamejTextField = new javax.swing.JTextField();
        emailidjTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cityjTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lnamejTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        medicalprescriptionjButton = new javax.swing.JButton();
        backJButton2 = new javax.swing.JButton();
        labtestjButton = new javax.swing.JButton();
        viewencounterhistoryjButton = new javax.swing.JButton();

        refereddetailsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Patient's Name"
            }
        ));
        jScrollPane1.setViewportView(refereddetailsjTable);

        assignjButton.setText("Assign To Me");
        assignjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignjButtonActionPerformed(evt);
            }
        });

        viewjButton.setText("View Patient");
        viewjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewjButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("City");

        jLabel7.setText("Age");

        phnumjTextField.setEditable(false);
        phnumjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phnumjTextFieldKeyTyped(evt);
            }
        });

        agejTextField.setEditable(false);
        agejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                agejTextFieldKeyTyped(evt);
            }
        });

        fnamejTextField.setEditable(false);
        fnamejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fnamejTextFieldKeyTyped(evt);
            }
        });

        emailidjTextField.setEditable(false);

        jLabel5.setText("First Name");

        cityjTextField.setEditable(false);
        cityjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cityjTextFieldKeyTyped(evt);
            }
        });

        jLabel6.setText("Last Name");

        lnamejTextField.setEditable(false);
        lnamejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lnamejTextFieldKeyTyped(evt);
            }
        });

        jLabel9.setText("Phone Number");

        jLabel10.setText("Email ID");

        medicalprescriptionjButton.setText("Medical Prescription");
        medicalprescriptionjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalprescriptionjButtonActionPerformed(evt);
            }
        });

        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        labtestjButton.setText("Lab Test");
        labtestjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labtestjButtonActionPerformed(evt);
            }
        });

        viewencounterhistoryjButton.setText("View Encounter History");
        viewencounterhistoryjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewencounterhistoryjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(agejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(lnamejTextField)
                    .addComponent(fnamejTextField))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(emailidjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phnumjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(assignjButton)))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(medicalprescriptionjButton)
                .addGap(34, 34, 34)
                .addComponent(viewjButton)
                .addGap(55, 55, 55)
                .addComponent(labtestjButton)
                .addGap(35, 35, 35)
                .addComponent(viewencounterhistoryjButton)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(assignjButton)
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labtestjButton, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(viewencounterhistoryjButton, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(medicalprescriptionjButton)
                        .addComponent(viewjButton)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(fnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phnumjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(emailidjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(backJButton2)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void phnumjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phnumjTextFieldKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!(Character.isDigit(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_phnumjTextFieldKeyTyped

    private void agejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_agejTextFieldKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!(Character.isDigit(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_agejTextFieldKeyTyped

    private void fnamejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnamejTextFieldKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!(Character.isLetter(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_fnamejTextFieldKeyTyped

    private void cityjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cityjTextFieldKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!(Character.isLetter(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_cityjTextFieldKeyTyped

    private void lnamejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnamejTextFieldKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!(Character.isLetter(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_lnamejTextFieldKeyTyped

    private void assignjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignjButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow = refereddetailsjTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Work Request");
        }
        DoctorReferenceWorkRequest request = (DoctorReferenceWorkRequest) refereddetailsjTable.getValueAt(selectedRow, 0);
        request.setReceiver(account);
        request.setStatus("Diagnosing Patient");
        populateTable();
    }//GEN-LAST:event_assignjButtonActionPerformed

    private void viewjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = refereddetailsjTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Work Request");
        }
        
        DoctorReferenceWorkRequest request = (DoctorReferenceWorkRequest) refereddetailsjTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Please Take Care")){
            JOptionPane.showMessageDialog(null,"Please accept the request first");
            return;
        }
        encounter=request.getPatient().getEncounterList().createEncounter();
        Person p=account.getEmployee();
        Doctor doctor=(Doctor)p;
        encounter.setDoctor(doctor);
        encounter.setDoj(new Date());
        fnamejTextField.setText(request.getPatient().getFname());
        lnamejTextField.setText(request.getPatient().getLname());
        agejTextField.setText((String.valueOf(request.getPatient().getAge())));
        cityjTextField.setText(request.getPatient().getCity());
        phnumjTextField.setText(String.valueOf(request.getPatient().getNum()));
        emailidjTextField.setText(request.getPatient().getEmail());
//        respratejTextField.setText(String.valueOf(request.getEncounter().getVitalsign().getResprate()));
//        heartratejTextField.setText(String.valueOf(request.getEncounter().getVitalsign().getHeartrate()));
//        sysbpjTextField.setText(String.valueOf(request.getEncounter().getVitalsign().getSysbp()));
//        tempjTextField.setText(String.valueOf(request.getEncounter().getVitalsign().getTemp()));
        //dojjXDatePicker.setDate(encounter.getDoj());
    }//GEN-LAST:event_viewjButtonActionPerformed

    private void medicalprescriptionjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalprescriptionjButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow = refereddetailsjTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Row");
        }
        DoctorReferenceWorkRequest request = (DoctorReferenceWorkRequest) refereddetailsjTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Please Take Care")){
            JOptionPane.showMessageDialog(null,"Please accept the request first");
            return;
        }
        MedicalPrescriptionJPanel mpjp = new MedicalPrescriptionJPanel(userProcessContainer, account, enterprise, system, request.getPatient(), request.getEncounter());
        userProcessContainer.add("MedicalPrescriptionJPanel", mpjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_medicalprescriptionjButtonActionPerformed

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void labtestjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labtestjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = refereddetailsjTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Row");
        }
        DoctorReferenceWorkRequest request = (DoctorReferenceWorkRequest) refereddetailsjTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Please Take Care")){
            JOptionPane.showMessageDialog(null,"Please accept the request first");
            return;
        }
        DoctorLabWorkRequestJPanel dlwjp = new DoctorLabWorkRequestJPanel(userProcessContainer, account, enterprise,  request.getPatient(),request.getEncounter());
        userProcessContainer.add("DoctorLabWorkRequestJPanel", dlwjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_labtestjButtonActionPerformed

    private void viewencounterhistoryjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewencounterhistoryjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = refereddetailsjTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Row");
        }
        DoctorReferenceWorkRequest request = (DoctorReferenceWorkRequest) refereddetailsjTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Please Take Care")){
            JOptionPane.showMessageDialog(null,"Please accept the request first");
            return;
        }
        ViewEncounterHistoryJPanel vehjp = new ViewEncounterHistoryJPanel(userProcessContainer, account, enterprise,  request.getPatient());
        userProcessContainer.add("ViewEncounterHistoryJPanel", vehjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewencounterhistoryjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField agejTextField;
    private javax.swing.JButton assignjButton;
    private javax.swing.JButton backJButton2;
    private javax.swing.JTextField cityjTextField;
    private javax.swing.JTextField emailidjTextField;
    private javax.swing.JTextField fnamejTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton labtestjButton;
    private javax.swing.JTextField lnamejTextField;
    private javax.swing.JButton medicalprescriptionjButton;
    private javax.swing.JTextField phnumjTextField;
    private javax.swing.JTable refereddetailsjTable;
    private javax.swing.JButton viewencounterhistoryjButton;
    private javax.swing.JButton viewjButton;
    // End of variables declaration//GEN-END:variables
}
