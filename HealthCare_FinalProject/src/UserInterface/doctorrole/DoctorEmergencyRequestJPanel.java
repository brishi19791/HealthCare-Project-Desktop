/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.doctorrole;

import Business.EcoSystem;
import Business.Encounter.Encounter;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Person.Doctor;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorEmergencyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class DoctorEmergencyRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorEmergencyRequestJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Enterprise enterprise;
    private EcoSystem system;
    private Encounter encounter;

    public DoctorEmergencyRequestJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.system = system;
        populate();
        //populateTable();
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) emergencyjTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            if (request instanceof DoctorEmergencyWorkRequest) {
                Object[] row = new Object[5];

                DoctorEmergencyWorkRequest req = (DoctorEmergencyWorkRequest) request;
                row[0] = req;
                row[1] = req.getLname();
                row[2] = request.getSender();
                //row[3] = request.getReceiver() == null ? null : request.getReceiver();
                row[3] = request.getStatus();

                dtm.addRow(row);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fnamejTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lnamejTextField = new javax.swing.JTextField();
        searchjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        emergencyjTable = new javax.swing.JTable();
        viewpatientjButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        backjButton3 = new javax.swing.JButton();

        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");

        searchjButton.setText("Search");
        searchjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchjButtonActionPerformed(evt);
            }
        });

        emergencyjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Sender", "Status"
            }
        ));
        jScrollPane1.setViewportView(emergencyjTable);

        viewpatientjButton.setText("View Patient");
        viewpatientjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewpatientjButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Search Patient");

        backjButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backjButton3.setText("<< Back");
        backjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(329, 329, 329))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(141, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fnamejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(lnamejTextField))
                        .addGap(54, 54, 54)
                        .addComponent(searchjButton)
                        .addGap(74, 74, 74)
                        .addComponent(viewpatientjButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backjButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(lnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchjButton)
                                .addGap(6, 6, 6))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(viewpatientjButton)))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(backjButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchjButtonActionPerformed
        // TODO add your handling code here:
        String fname = fnamejTextField.getText();
        String lname = lnamejTextField.getText();
        if (fname.isEmpty() || lname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Details");
            return;
        }
        DoctorEmergencyWorkRequest request = new DoctorEmergencyWorkRequest();
        request.setFname(fname);
        request.setLname(lname);
        request.setSender(account);
        request.setStatus("Awaiting");
        //request.setPatient(null);
        Organization org = null;
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof HospitalEnterprise) {
                    for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (o instanceof DoctorOrganization) {
                            org = o;
                            System.out.println(org);
                            break;
                        }

                    }
                    if (org != null) {
//                        for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
//                            if (!(ua.equals(account))) {
                                org.getWorkQueue().getWorkRequestList().add(request);
                            

                            //account.getWorkQueue().getWorkRequestList().add(request);
                        
                    }

                }
            }
        }
        if (org != null) {
//                for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
//                    if (!(ua.equals(account)))
            org.getWorkQueue().getWorkRequestList().add(request);

            //account.getWorkQueue().getWorkRequestList().add(request);
        }

        account.getWorkQueue().getWorkRequestList().add(request);
        populate();


    }//GEN-LAST:event_searchjButtonActionPerformed

    private void viewpatientjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewpatientjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = emergencyjTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Work Request");
        }
        DoctorEmergencyWorkRequest request = (DoctorEmergencyWorkRequest) emergencyjTable.getValueAt(selectedRow, 0);
        if (request.getStatus().equals("Patient found")) {
            encounter = request.getPatient().getEncounterList().createEncounter();
            Person person = account.getEmployee();
            Doctor doctor = (Doctor) person;
            encounter.setDoctor(doctor);
            encounter.setDoj(new Date());
            //System.out.println(request.getPatient());
            //System.out.println(request.getPatient().getFname());
            //System.out.println(request.getPatient().getAge());
            ViewSearchPatientPanel vspjp = new ViewSearchPatientPanel(userProcessContainer, account, enterprise, system, request, encounter);
            userProcessContainer.add("ViewSearchPatientPanel", vspjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Patient not found yet!!");
            return;
        }

//        fname1jTextField1.setText(request.getPatient().getFname());
//        lnamejTextField1.setText(request.getPatient().getLname());
//        agejTextField.setText(String.valueOf(request.getPatient().getAge()));
//        cityjTextField.setText(request.getPatient().getCity());
//        phnumjTextField.setText(String.valueOf(request.getPatient().getNum()));
//        emailidjTextField.setText(request.getPatient().getEmail());

    }//GEN-LAST:event_viewpatientjButtonActionPerformed

    private void backjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton3ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton3;
    private javax.swing.JTable emergencyjTable;
    private javax.swing.JTextField fnamejTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lnamejTextField;
    private javax.swing.JButton searchjButton;
    private javax.swing.JButton viewpatientjButton;
    // End of variables declaration//GEN-END:variables
}
