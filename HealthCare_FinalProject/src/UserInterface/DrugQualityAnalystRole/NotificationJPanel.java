/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DrugQualityAnalystRole;

import Business.Drug.Drug;
import Business.EcoSystem;
import Business.Enterprise.DrugCompanyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.PharmacistOrganization;
import Business.Organization.QualityAnalystOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdverseEventWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class NotificationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NotificationJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Enterprise enterprise;
    private EcoSystem system;
    private QualityAnalystOrganization qao;
    private AdverseEventWorkRequest request;

    public NotificationJPanel(JPanel userProcessContainer, UserAccount account, QualityAnalystOrganization qao, Enterprise enterprise, EcoSystem system, AdverseEventWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.system = system;
        this.qao = qao;
        this.request = request;

        populate();
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) notifyjTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            if (request instanceof AdverseEventWorkRequest) {
                Object[] row = new Object[5];
                row[0] = request;
                row[1] = request.getSender();

                AdverseEventWorkRequest req = (AdverseEventWorkRequest) request;
                System.out.println(req.getDrug());
                System.out.println(req.getDrug().getDrugName());
                row[2] = req.getDrug().getDrugName();
                row[3] = req.getDrugCompany().getName();
                row[4] = request.getStatus();
                dtm.addRow(row);

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        notifyjButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        notifyjTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        messagejTextField = new javax.swing.JTextField();
        callbackjButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        backjButton2 = new javax.swing.JButton();

        notifyjButton.setText("Notify");
        notifyjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notifyjButtonActionPerformed(evt);
            }
        });

        notifyjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "QA Name", "Drug Name", "Drug Company", "Status"
            }
        ));
        jScrollPane2.setViewportView(notifyjTable);

        jLabel2.setText("Message");

        callbackjButton.setText("Call Back");
        callbackjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callbackjButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        backjButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backjButton2.setText("<< Back");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButton1)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(messagejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(notifyjButton)
                        .addGap(18, 18, 18)
                        .addComponent(callbackjButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backjButton2)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(messagejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notifyjButton)
                            .addComponent(callbackjButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jButton1)))
                .addGap(73, 73, 73)
                .addComponent(backjButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void notifyjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notifyjButtonActionPerformed
        // TODO add your handling code here:
        String message = messagejTextField.getText();
        if (messagejTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter message");
            return;
        }
        //        int selectedRow = adversejTable.getSelectedRow();
        //
        //        if (selectedRow < 0) {
        //            JOptionPane.showMessageDialog(null, "Please select a Row");
        //        }
        //AdverseEventWorkRequest request = new AdverseEventWorkRequest();
        request.setMessage(message);
        request.setSender(account);
        //request.setStatus("Called Back");
        Organization org = null;
        for (Network network : system.getNetworkList()) {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                if ((e instanceof HospitalEnterprise) || (e instanceof PharmacyEnterprise)) {
                    for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        if ((o instanceof DoctorOrganization) || (o instanceof PharmacistOrganization)) {
                            org = o;
                            break;
                        }
                    }
                    if (org != null) {
                        org.getWorkQueue().getWorkRequestList().add(request);

                    }

                }
            }
        }
        account.getWorkQueue().getWorkRequestList().add(request);
//        request.setStatus("Drug Called Back");
//        DrugCompanyEnterprise dce = (DrugCompanyEnterprise) enterprise;
//        dce.getDrugList().getDrugList().remove(request.getDrug());
//        
//        for(Network network:system.getNetworkList()){
//            for(Enterprise e1:network.getEnterpriseDirectory().getEnterpriseList()){
//                if(e1 instanceof PharmacyEnterprise){
//                    PharmacyEnterprise ph=(PharmacyEnterprise)e1;
//                    for(Drug drug:ph.getDrugList().getDrugList()){
//                        if(drug.getDrugName().equals(request.getDrug().getDrugName())){
//                            ph.getDrugList().getDrugList().remove(drug);
//                        }
//                        
//                    }
//                }
//            }
//        }

    }//GEN-LAST:event_notifyjButtonActionPerformed

    private void callbackjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callbackjButtonActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = notifyjTable.getSelectedRow();

            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please select a Work Request");
            }
            AdverseEventWorkRequest request = (AdverseEventWorkRequest) notifyjTable.getValueAt(selectedRow, 0);
            request.setStatus("Drug Called Back");
            DrugCompanyEnterprise dce = (DrugCompanyEnterprise) enterprise;
            dce.getDrugList().getDrugList().remove(request.getDrug());

            for (Network network : system.getNetworkList()) {
                for (Enterprise e1 : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (e1 instanceof PharmacyEnterprise) {
                        PharmacyEnterprise ph = (PharmacyEnterprise) e1;
                        for (Drug drug : ph.getDrugList().getDrugList()) {
                            if (drug.getDrugName().equals(request.getDrug().getDrugName())) {
                                ph.getDrugList().getDrugList().remove(drug);
                            }

                        }
                    }
                }
            }
        }
        catch(Exception e){
            
        }


    }//GEN-LAST:event_callbackjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton backjButton2;
    private javax.swing.JButton callbackjButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField messagejTextField;
    private javax.swing.JButton notifyjButton;
    private javax.swing.JTable notifyjTable;
    // End of variables declaration//GEN-END:variables
}
